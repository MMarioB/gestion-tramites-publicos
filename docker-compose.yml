version: '3.8'

services:
  # Base de datos MongoDB
  mongodb-tramites:
    image: mongo:7.0
    container_name: mongodb-tramites
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: tramites_db
    volumes:
      - mongodb_tramites_data:/data/db
    networks:
      - tramites-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-usuarios:
    image: postgres:16-alpine
    container_name: postgres-usuarios
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: usuarios_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_usuarios_data:/var/lib/postgresql/data
    networks:
      - tramites-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Microservicio tramites-service
  tramites-service:
    build:
      context: ./tramites-service
      dockerfile: Dockerfile
    container_name: tramites-service
    ports:
      - "8081:8081"
    environment:
      # Configuración de MongoDB
      SPRING_DATA_MONGODB_HOST: mongodb-tramites
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_DATABASE: tramites_db
      # Otras configuraciones
      SERVER_PORT: 8081
      LOGGING_LEVEL_COM_GESTIONTRAMITES: DEBUG
    depends_on:
      mongodb-tramites:
        condition: service_healthy
    networks:
      - tramites-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  usuarios-service:
    build:
      context: ./usuarios-service
      dockerfile: Dockerfile
    container_name: usuarios-service
    ports:
      - "8082:8082"
    environment:
      # Configuración de PostgreSQL
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-usuarios:5432/usuarios_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      # Otras configuraciones
      SERVER_PORT: 8082
      LOGGING_LEVEL_COM_GESTIONTRAMITES: DEBUG
    depends_on:
      postgres-usuarios:
        condition: service_healthy
    networks:
      - tramites-network
    healthcheck:
      test: [ "CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8082/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

volumes:
  mongodb_tramites_data:
    driver: local
  postgres_usuarios_data:
    driver: local

networks:
  tramites-network:
    driver: bridge